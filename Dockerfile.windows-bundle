FROM mubox/windows-env

ARG INSTALLER_VERSION
ARG MICROBOX_VERSION
ARG VIRTUALBOX_VERSION
ARG VIRTUALBOX_REVISION
ARG DOCKER_MACHINE_VERSION

RUN mkdir /bundle

WORKDIR /bundle

# fetch microbox
RUN curl -fsSL -o microbox.exe "https://s3.amazonaws.com/tools.microbox.cloud/microbox/v${MICROBOX_VERSION}/windows/amd64/microbox.exe"

# fetch microbox-update
RUN curl -fsSL -o microbox-update.exe "https://s3.amazonaws.com/tools.microbox.cloud/microbox/v${MICROBOX_VERSION}/windows/amd64/microbox-update.exe"

# fetch openvpn
RUN curl -fsSL -o microbox-vpn.exe "https://s3.amazonaws.com/tools.microbox.cloud/openvpn/windows/amd64/openvpn.exe"

# fetch srvstart
RUN curl -fsSL -o srvstart_run.v110.zip "http://www.zen18887.zen.co.uk/nick/binaries/srvstart_run.v110.zip"

# fetch docker-machine
RUN curl -fsSL -o microbox-machine.exe "https://github.com/docker/machine/releases/download/v${DOCKER_MACHINE_VERSION}/docker-machine-Windows-x86_64.exe"

# fetch ansicon
RUN curl -fsSL -o ansi166.zip "https://github.com/adoxa/ansicon/releases/download/v1.66/ansi166.zip"

# fetch tap-windows
RUN curl -fsSL -o tap-windows-9.21.2.exe "https://swupdate.openvpn.org/community/releases/tap-windows-9.21.2.exe"

# unzip things
RUN unzip srvstart_run.v110.zip

RUN unzip ansi166.zip

RUN 7z x tap-windows-9.21.2.exe -aou

# copy things to the bundle

RUN cp x64/* /bundle

RUN cp bin/tapinstall.exe /bundle
RUN cp driver/OemVista.inf /bundle
RUN cp driver/tap0901.cat /bundle
RUN cp driver/tap0901.sys /bundle

# fetch virtualbox
#RUN curl -fsSL -o virtualbox.exe "http://download.virtualbox.org/virtualbox/${VIRTUALBOX_VERSION}/VirtualBox-${VIRTUALBOX_VERSION}-${VIRTUALBOX_REVISION}-Win.exe"
COPY /virtualbox/VirtualBox-${VIRTUALBOX_VERSION}-${VIRTUALBOX_REVISION}-Win.exe /bundle/virtualbox.exe
RUN wine virtualbox.exe -extract -silent -path . && \
	  rm virtualbox.exe && \
	  mv *.msi VirtualBox_amd64.msi

COPY certs/win /certs

RUN osslsigncode sign \
        -certs /certs/bundle.crt \
        -key /certs/codesign.key \
        -h sha256 \
        -n "Microbox" \
        -i "http://microbox.cloud" \
        -t "http://timestamp.digicert.com/" \
        -in /bundle/microbox.exe \
        -out /bundle/microbox-signed.exe && \
    cp /bundle/microbox-signed.exe /bundle/microbox.exe

RUN osslsigncode sign \
        -certs /certs/bundle.crt \
        -key /certs/codesign.key \
        -h sha256 \
        -n "Microbox Updater" \
        -i "http://microbox.cloud" \
        -t "http://timestamp.digicert.com/" \
        -in /bundle/microbox-update.exe \
        -out /bundle/microbox-update-signed.exe && \
    cp /bundle/microbox-update-signed.exe /bundle/microbox-update.exe

RUN osslsigncode sign \
        -certs /certs/bundle.crt \
        -key /certs/codesign.key \
        -h sha256 \
        -n "Microbox Updater" \
        -i "http://microbox.cloud" \
        -t "http://timestamp.digicert.com/" \
        -in /bundle/microbox-vpn.exe \
        -out /bundle/microbox-vpn-signed.exe && \
    cp /bundle/microbox-vpn-signed.exe /bundle/microbox-vpn.exe

RUN osslsigncode sign \
        -certs /certs/bundle.crt \
        -key /certs/codesign.key \
        -h sha256 \
        -n "Microbox Updater" \
        -i "http://microbox.cloud" \
        -t "http://timestamp.digicert.com/" \
        -in /bundle/microbox-machine.exe \
        -out /bundle/microbox-machine-signed.exe && \
    cp /bundle/microbox-machine-signed.exe /bundle/microbox-machine.exe

WORKDIR /installer
RUN rm -rf /tmp/.wine-0/

# Add installer resources
COPY windows-bundle /installer

# Uncomment once we're ready to integrate with mixpanel
# RUN wine ../innosetup/ISCC.exe MicroboxSetup.iss /DMyAppVersion=${INSTALLER_VERSION} /DMixpanelToken=${MIXPANEL_TOKEN}
RUN wine ../innosetup/ISCC.exe microbox.iss /DMyAppVersion=${INSTALLER_VERSION}

RUN osslsigncode sign \
        -certs /certs/bundle.crt \
        -key /certs/codesign.key \
        -h sha256 \
        -n "Microbox installer" \
        -i "http://microbox.cloud" \
        -t "http://timestamp.digicert.com/" \
        -in /installer/Output/MicroboxSetup.exe \
        -out /installer/Output/MicroboxSetup-signed.exe && \
    cp /installer/Output/MicroboxSetup-signed.exe /installer/Output/MicroboxBundleSetup.exe
